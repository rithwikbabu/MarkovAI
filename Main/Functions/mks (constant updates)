import re
import random

sentence = " "

def mks(sentence):
    text = sentence
    
    def start_word(text):
        startwords = []
        for x in text:
            text = re.sub(r'U.S.', 'usa', x).lower()
            text = re.sub(r'[><"=,./#?&;()|:-]+', '', text).split()
            startwords.append(text[0])

        return startwords

    def end_word(text):
        for x in text:
            endwords = []
            text = re.sub(r'U.S.', 'usa', x).lower()
            text = re.sub(r'[><"=,./#?&;()|:-]+', '', text).split()
            endwords.append(text[-2])

        return endwords

    def wordchain(text):
        word_chain = {}
        for fil in text:
            sent = re.sub(r'U.S.', 'usa', fil).lower()
            sent = re.sub(r'[><"=,./#?&;()|:-]+', '', sent).split()

            first_word = []
            after_word = []
            for x, y in zip(sent, sent[1:]):
                first_word = []
                after_word = []
                first_word.append(x)
                after_word.append(y)

                for key, value in zip(first_word, after_word):
                    try:
                        word_chain[key].append(value)
                    except:
                        word_chain[key] = []
                        word_chain[key].append(value)
        return word_chain

    def sentencecreate(text):
        for strt, nd in zip(start_word(text), end_word(text)):
            chaindict = wordchain(text)
            chaindict_keys = list(chaindict.keys())

        start = random.choice(start_word(text))
        words = []
        words.append(start)
        z = chaindict.get(start)

            for x in chaindict_keys:
                y = random.choice(z)
                words.append(y)

                if y not in chaindict:
                    break
                z = chaindict.get(y)
        sentence = ' '.join(words)

        return sentence
    sentence = sentencecreate(text)
    return sentence

    
